{"Structs/Application.html#/id":{"name":"id","parent_name":"Application"},"Structs/Application.html#/root":{"name":"root","parent_name":"Application"},"Structs/Application.html#/init(id:root:)":{"name":"init(id:root:)","abstract":"<p>Creates a new Application instance.</p>","parent_name":"Application"},"Structs/Grid/Item.html#/init(from:to:child:)":{"name":"init(from:to:child:)","parent_name":"Item"},"Structs/Grid/Item.html#/init(from:size:position:child:)":{"name":"init(from:size:position:child:)","parent_name":"Item"},"Structs/Grid/Item.html#/hashValue":{"name":"hashValue","parent_name":"Item"},"Structs/Grid/Size.html#/x":{"name":"x","parent_name":"Size"},"Structs/Grid/Size.html#/y":{"name":"y","parent_name":"Size"},"Structs/Grid/Size.html#/init(x:y:)":{"name":"init(x:y:)","parent_name":"Size"},"Structs/Grid/Location/How.html#/absolute":{"name":"absolute","parent_name":"How"},"Structs/Grid/Location/How.html#/relative":{"name":"relative","parent_name":"How"},"Structs/Grid/Location/How.html":{"name":"How","parent_name":"Location"},"Structs/Grid/Location.html#/how":{"name":"how","abstract":"<p>Determines whether this is location is relative to the previous grid item, or","parent_name":"Location"},"Structs/Grid/Location.html#/x":{"name":"x","abstract":"<p>The horizontal cell the grid item is in.</p>","parent_name":"Location"},"Structs/Grid/Location.html#/y":{"name":"y","abstract":"<p>The vertical cell the grid item is in.</p>","parent_name":"Location"},"Structs/Grid/Location.html#/init(_:x:y:)":{"name":"init(_:x:y:)","parent_name":"Location"},"Structs/Grid/Location.html#/absolute(x:y:)":{"name":"absolute(x:y:)","abstract":"<p>A shortcut to create a new absolute location.</p>","parent_name":"Location"},"Structs/Grid/Location.html#/relative(x:y:)":{"name":"relative(x:y:)","abstract":"<p>A shortcut to create a new relative location.</p>","parent_name":"Location"},"Structs/Grid/Location.html#/with(how:_:)":{"name":"with(how:_:)","parent_name":"Location"},"Structs/Grid/Homogenous.html#/all":{"name":"all","parent_name":"Homogenous"},"Structs/Grid/Homogenous.html#/row":{"name":"row","parent_name":"Homogenous"},"Structs/Grid/Homogenous.html#/column":{"name":"column","parent_name":"Homogenous"},"Structs/Grid/Homogenous.html#/none":{"name":"none","parent_name":"Homogenous"},"Structs/Grid/Position.html#/unspecified":{"name":"unspecified","parent_name":"Position"},"Structs/Grid/Position.html#/above":{"name":"above","parent_name":"Position"},"Structs/Grid/Position.html#/below":{"name":"below","parent_name":"Position"},"Structs/Grid/Position.html#/left":{"name":"left","parent_name":"Position"},"Structs/Grid/Position.html#/right":{"name":"right","parent_name":"Position"},"Structs/Grid/Position.html":{"name":"Position","abstract":"<p>The position of an item on the grid.</p>","parent_name":"Grid"},"Structs/Grid/Homogenous.html":{"name":"Homogenous","abstract":"<p>Homogenity of grid items: are they homogenous on rows, columns, both, or none?</p>","parent_name":"Grid"},"Structs/Grid/Location.html":{"name":"Location","parent_name":"Grid"},"Structs/Grid/Size.html":{"name":"Size","abstract":"<p>Determines the width and height of a grid item.</p>","parent_name":"Grid"},"Structs/Grid/Item.html":{"name":"Item","abstract":"<p>A grid item. Holds a child widget, origin location, size, and position.</p>","parent_name":"Grid"},"Structs/Grid.html#/key":{"name":"key","parent_name":"Grid"},"Structs/Grid.html#/defaultPosition":{"name":"defaultPosition","parent_name":"Grid"},"Structs/Grid.html#/homogenous":{"name":"homogenous","parent_name":"Grid"},"Structs/Grid.html#/items":{"name":"items","parent_name":"Grid"},"Structs/Grid.html#/init(key:defaultPosition:homogenous:items:)":{"name":"init(key:defaultPosition:homogenous:items:)","parent_name":"Grid"},"Structs/Grid.html#/init(key:homogenous:row:)":{"name":"init(key:homogenous:row:)","parent_name":"Grid"},"Structs/Grid.html#/init(key:homogenous:column:)":{"name":"init(key:homogenous:column:)","parent_name":"Grid"},"Structs/Button.html#/key":{"name":"key","parent_name":"Button"},"Structs/Button.html#/text":{"name":"text","parent_name":"Button"},"Structs/Button.html#/init(key:text:_:)":{"name":"init(key:text:_:)","parent_name":"Button"},"Structs/Button.html#/onClick":{"name":"onClick","abstract":"<p>Emitted when a button is clicked.</p>","parent_name":"Button"},"Structs/Label.html#/key":{"name":"key","parent_name":"Label"},"Structs/Label.html#/text":{"name":"text","parent_name":"Label"},"Structs/Label.html#/justify":{"name":"justify","parent_name":"Label"},"Structs/Label.html#/init(key:text:justify:)":{"name":"init(key:text:justify:)","parent_name":"Label"},"Structs/Window.html#/key":{"name":"key","parent_name":"Window"},"Structs/Window.html#/title":{"name":"title","parent_name":"Window"},"Structs/Window.html#/width":{"name":"width","parent_name":"Window"},"Structs/Window.html#/height":{"name":"height","parent_name":"Window"},"Structs/Window.html#/hasTitleBar":{"name":"hasTitleBar","parent_name":"Window"},"Structs/Window.html#/child":{"name":"child","parent_name":"Window"},"Structs/Window.html#/init(key:title:width:height:hasTitleBar:child:)":{"name":"init(key:title:width:height:hasTitleBar:child:)","parent_name":"Window"},"Structs/SignalConnectionGroup.html#/init(_:)":{"name":"init(_:)","parent_name":"SignalConnectionGroup"},"Structs/SignalConnectionGroup.html#/map(signal:_:)":{"name":"map(signal:_:)","parent_name":"SignalConnectionGroup"},"Structs/SignalConnectionGroup.html#/hashValue":{"name":"hashValue","parent_name":"SignalConnectionGroup"},"Structs.html#/SignalConnection":{"name":"SignalConnection"},"Structs/SignalConnectionGroup.html":{"name":"SignalConnectionGroup"},"Structs/Window.html":{"name":"Window","abstract":"<p>A window widget. This widget should be the <q>root</q> widget of all your Amai projects.</p>"},"Structs/Label.html":{"name":"Label","abstract":"<p>A simple text label. Shows the given text with the given justification.</p>"},"Structs/Button.html":{"name":"Button","abstract":"<p>A button.</p>"},"Structs/Grid.html":{"name":"Grid","abstract":"<p>A grid. This is the core layout component of Amai (and GTK+).</p>"},"Structs/Application.html":{"name":"Application","abstract":"<p>An application that can be run.</p>"},"Protocols/State.html#/ctx":{"name":"ctx","parent_name":"State"},"Protocols/State.html#/build(ctx:)":{"name":"build(ctx:)","parent_name":"State"},"Protocols/State.html#/setState(setter:)":{"name":"setState(setter:)","parent_name":"State"},"Protocols/StatefulWidget.html#/createState(ctx:)":{"name":"createState(ctx:)","parent_name":"StatefulWidget"},"Protocols/StatelessWidget.html#/build(ctx:)":{"name":"build(ctx:)","parent_name":"StatelessWidget"},"Protocols/Widget.html#/key":{"name":"key","parent_name":"Widget"},"Protocols/Widget.html":{"name":"Widget","abstract":"<p>The base widget protocol, to be implemented by custom widgets.</p>"},"Protocols.html#/HashableWidget":{"name":"HashableWidget","abstract":"<p>A nicer way to say your <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Widget.html\">Widget</a></code> should be hashable.</p>"},"Protocols/StatelessWidget.html":{"name":"StatelessWidget"},"Protocols/StatefulWidget.html":{"name":"StatefulWidget"},"Protocols/State.html":{"name":"State"},"Functions.html#/run(app:)":{"name":"run(app:)","abstract":"<p>Runs the given application.</p>"},"Extensions/Array.html#/hashValue":{"name":"hashValue","parent_name":"Array"},"Extensions/Array.html":{"name":"Array"},"Enums/Justify.html#/left":{"name":"left","parent_name":"Justify"},"Enums/Justify.html#/right":{"name":"right","parent_name":"Justify"},"Enums/Justify.html#/center":{"name":"center","parent_name":"Justify"},"Enums/Justify.html#/fill":{"name":"fill","parent_name":"Justify"},"Enums/Justify.html":{"name":"Justify"},"Classes/Keyed.html#/widget":{"name":"widget","parent_name":"Keyed"},"Classes/Keyed.html#/init(widget:)":{"name":"init(widget:)","parent_name":"Keyed"},"Classes/Keyed.html#/==(_:_:)":{"name":"==(_:_:)","parent_name":"Keyed"},"Classes/Keyed.html#/hashValue":{"name":"hashValue","parent_name":"Keyed"},"Classes/SignalId.html#/=>(_:_:)":{"name":"=>(_:_:)","parent_name":"SignalId"},"Classes/SignalId.html#/==(_:_:)":{"name":"==(_:_:)","parent_name":"SignalId"},"Classes/SignalId.html#/hashValue":{"name":"hashValue","parent_name":"SignalId"},"Classes/BoundMethodHandler.html#/init(createdBy:function:)":{"name":"init(createdBy:function:)","parent_name":"BoundMethodHandler"},"Classes/BoundMethodHandler.html#/hashValue":{"name":"hashValue","parent_name":"BoundMethodHandler"},"Classes/MethodHandler.html#/init(_:)":{"name":"init(_:)","parent_name":"MethodHandler"},"Classes/MethodHandler.html#/bind(to:)":{"name":"bind(to:)","parent_name":"MethodHandler"},"Classes/Handler.html#/init(_:)":{"name":"init(_:)","abstract":"<p>Create a signal handler that calls the given function.</p>","parent_name":"Handler"},"Classes/BuildContext.html#/setState(setter:)":{"name":"setState(setter:)","parent_name":"BuildContext"},"Classes/AutoKey.html#/init(_:)":{"name":"init(_:)","parent_name":"AutoKey"},"Classes/AutoKey.html#/equals(_:)":{"name":"equals(_:)","parent_name":"AutoKey"},"Classes/AutoKey.html#/hashValue":{"name":"hashValue","parent_name":"AutoKey"},"Classes/NullKey.html#/equals(_:)":{"name":"equals(_:)","parent_name":"NullKey"},"Classes/NullKey.html#/hashValue":{"name":"hashValue","parent_name":"NullKey"},"Classes/Key.html#/init()":{"name":"init()","parent_name":"Key"},"Classes/Key.html#/==(_:_:)":{"name":"==(_:_:)","parent_name":"Key"},"Classes/Key.html#/equals(_:)":{"name":"equals(_:)","parent_name":"Key"},"Classes/Key.html#/hashValue":{"name":"hashValue","parent_name":"Key"},"Classes/Key.html":{"name":"Key","abstract":"<p>A key is an object that is used to compare widgets for equality. Differences will"},"Classes/NullKey.html":{"name":"NullKey","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Key.html\">Key</a></code> that&rsquo;s always equal to any other <code>NullKey</code>. This is primarily a stub used for"},"Classes/AutoKey.html":{"name":"AutoKey","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Key.html\">Key</a></code> that takes a hashable object and wraps it, forwarding equality and hashValue"},"Classes/BuildContext.html":{"name":"BuildContext","abstract":"<p>The core build context, passed around between widgets for building.</p>"},"Classes/Handler.html":{"name":"Handler","abstract":"<p>A signal handler that can be attached to widget signals. These should be created"},"Classes/MethodHandler.html":{"name":"MethodHandler","abstract":"<p>Like a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Handler.html\">Handler</a></code>, except it calls an unbound method that must be later bound."},"Classes/BoundMethodHandler.html":{"name":"BoundMethodHandler"},"Classes/SignalId.html":{"name":"SignalId"},"Classes/Keyed.html":{"name":"Keyed","abstract":"<p>A wrapper over a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Widget.html\">Widget</a></code> that allows you to store them in a <code>Hashable</code> type.</p>"},"tutorial.html":{"name":"Tutorial"},"Guides.html":{"name":"Guides","abstract":"<p>The following guides are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}